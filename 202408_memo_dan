Sub GenerateSQLFromExcel()

    ' 定义变量
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim fieldA As Variant
    Dim fieldB As Variant
    Dim conditions As String
    Dim sqlTemplate As String
    Dim sqlQuery As String
    Dim templateFilePath As String
    Dim outputFilePath As String
    Dim dataArray As Variant
    Dim fileNum As Integer

    ' 设置工作表
    Set ws = ThisWorkbook.Sheets("Sheet1") ' 替换为你的工作表名称

    ' 获取最后一行
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' 将数据加载到数组
    dataArray = ws.Range("A2:B" & lastRow).Value

    ' 初始化SQL条件
    conditions = ""

    ' 在内存中循环遍历数据，生成SQL条件
    For i = LBound(dataArray, 1) To UBound(dataArray, 1)
        fieldA = dataArray(i, 1)
        fieldB = dataArray(i, 2)
        conditions = conditions & " AND (" & fieldA & " = '" & fieldB & "')"
    Next i

    ' 读取SQL模板文件
    templateFilePath = "C:\Path\To\Your\Template.sql" ' 替换为你的SQL模板文件路径
    fileNum = FreeFile
    Open templateFilePath For Input As fileNum
    sqlTemplate = Input$(LOF(fileNum), fileNum)
    Close fileNum

    ' 将条件替换到SQL模板中
    sqlQuery = Replace(sqlTemplate, "{{Condition}}", Mid(conditions, 6)) ' 去掉第一个"AND"

    ' 输出生成的SQL到文件
    outputFilePath = "C:\Path\To\Your\Output.sql" ' 替换为你想保存的文件路径
    fileNum = FreeFile
    Open outputFilePath For Output As fileNum
    Print #fileNum, sqlQuery
    Close fileNum

    MsgBox "SQL文件生成完毕！", vbInformation

End Sub


Sub GenerateSQLFromSelectedFile()

    ' 定义变量
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim fieldA As Variant
    Dim fieldB As Variant
    Dim conditions As String
    Dim sqlTemplate As String
    Dim sqlQuery As String
    Dim templateFilePath As String
    Dim outputFilePath As String
    Dim dataArray As Variant
    Dim fileNum As Integer
    Dim externalWorkbook As Workbook
    Dim externalFilePath As String

    ' 让用户选择外部数据文件
    externalFilePath = Application.GetOpenFilename("Excel Files (*.xlsx), *.xlsx", , "请选择数据文件")

    ' 如果用户取消选择，则退出
    If externalFilePath = "False" Then
        MsgBox "未选择文件，操作取消。", vbExclamation
        Exit Sub
    End If

    ' 打开外部数据文件
    Set externalWorkbook = Workbooks.Open(externalFilePath)
    Set ws = externalWorkbook.Sheets("Sheet1") ' 替换为外部文件中的工作表名称

    ' 获取最后一行
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' 将数据加载到数组
    dataArray = ws.Range("A2:B" & lastRow).Value

    ' 关闭外部数据文件
    externalWorkbook.Close False ' 不保存任何更改

    ' 初始化SQL条件
    conditions = ""

    ' 在内存中循环遍历数据，生成SQL条件
    For i = LBound(dataArray, 1) To UBound(dataArray, 1)
        fieldA = dataArray(i, 1)
        fieldB = dataArray(i, 2)
        conditions = conditions & " AND (" & fieldA & " = '" & fieldB & "')"
    Next i

    ' 读取SQL模板文件
    templateFilePath = "C:\Path\To\Your\Template.sql" ' 替换为你的SQL模板文件路径
    fileNum = FreeFile
    Open templateFilePath For Input As fileNum
    sqlTemplate = Input$(LOF(fileNum), fileNum)
    Close fileNum

    ' 将条件替换到SQL模板中
    sqlQuery = Replace(sqlTemplate, "{{Condition}}", Mid(conditions, 6)) ' 去掉第一个"AND"

    ' 输出生成的SQL到文件
    outputFilePath = "C:\Path\To\Your\Output.sql" ' 替换为你想保存的文件路径
    fileNum = FreeFile
    Open outputFilePath For Output As fileNum
    Print #fileNum, sqlQuery
    Close fileNum

    MsgBox "SQL文件生成完毕！", vbInformation

End Sub



Sub GenerateSQLFromLargeFile()

    ' 定义变量
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim fieldA As String
    Dim fieldB As String
    Dim conditions As String
    Dim sqlTemplate As String
    Dim sqlQuery As String
    Dim templateFilePath As String
    Dim outputFilePath As String
    Dim fileNum As Integer
    Dim externalWorkbook As Workbook
    Dim externalFilePath As String
    
    ' 让用户选择外部数据文件
    externalFilePath = Application.GetOpenFilename("Excel Files (*.xlsx), *.xlsx", , "请选择数据文件")

    ' 如果用户取消选择，则退出
    If externalFilePath = "False" Then
        MsgBox "未选择文件，操作取消。", vbExclamation
        Exit Sub
    End If

    ' 打开外部数据文件
    Set externalWorkbook = Workbooks.Open(externalFilePath)
    Set ws = externalWorkbook.Sheets("Sheet1") ' 替换为外部文件中的工作表名称

    ' 获取最后一行
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' 初始化SQL条件
    conditions = ""

    ' 逐行读取和处理数据
    For i = 2 To lastRow
        fieldA = ws.Cells(i, 1).Value
        fieldB = ws.Cells(i, 2).Value
        conditions = conditions & " AND (" & fieldA & " = '" & fieldB & "')"

        ' 定期写入文件，避免内存占用过大
        If i Mod 10000 = 0 Then
            ' 读取SQL模板文件
            templateFilePath = "C:\Path\To\Your\Template.sql" ' 替换为你的SQL模板文件路径
            fileNum = FreeFile
            Open templateFilePath For Input As fileNum
            sqlTemplate = Input$(LOF(fileNum), fileNum)
            Close fileNum

            ' 将条件替换到SQL模板中
            sqlQuery = Replace(sqlTemplate, "{{Condition}}", Mid(conditions, 6)) ' 去掉第一个"AND"

            ' 输出生成的SQL到文件
            outputFilePath = "C:\Path\To\Your\Output.sql" ' 替换为你想保存的文件路径
            fileNum = FreeFile
            Open outputFilePath For Append As fileNum
            Print #fileNum, sqlQuery
            Close fileNum

            ' 重置条件字符串
            conditions = ""
        End If
    Next i

    ' 处理剩余的条件
    If conditions <> "" Then
        templateFilePath = "C:\Path\To\Your\Template.sql" ' 替换为你的SQL模板文件路径
        fileNum = FreeFile
        Open templateFilePath For Input As fileNum
        sqlTemplate = Input$(LOF(fileNum), fileNum)
        Close fileNum

        sqlQuery = Replace(sqlTemplate, "{{Condition}}", Mid(conditions, 6)) ' 去掉第一个"AND"

        outputFilePath = "C:\Path\To\Your\Output.sql" ' 替换为你想保存的文件路径
        fileNum = FreeFile
        Open outputFilePath For Append As fileNum
        Print #fileNum, sqlQuery
        Close fileNum
    End If

    ' 关闭外部数据文件
    externalWorkbook.Close False ' 不保存任何更改

    MsgBox "SQL文件生成完毕！", vbInformation

End Sub


import pandas as pd

# 定义Excel文件路径、SQL模板文件路径和输出SQL文件路径
excel_file_path = 'C:/Path/To/Data.xlsx'
template_file_path = 'C:/Path/To/Template.sql'
output_sql_file_path = 'C:/Path/To/Output.sql'

# 读取SQL模板文件
with open(template_file_path, 'r') as template_file:
    sql_template = template_file.read()

# 读取Excel文件，获取指定字段的所有值
df = pd.read_excel(excel_file_path, sheet_name='Sheet1')

# 假设要读取的字段名称是 'FieldA'
df = df[['FieldA']].dropna()

# 固定值
fixed_value = 5

# 将FieldA的值与固定值5组合成元组的字符串形式 (FieldA, 5)
values_str = ", ".join([f"({str(row['FieldA']).replace('\'', '\'\'')}, {fixed_value})" for _, row in df.iterrows()])

# 替换SQL模板中的占位符 {{Condition}} 为生成的IN条件
sql_query = sql_template.replace("{{Condition}}", values_str)

# 将生成的SQL查询写入文件
with open(output_sql_file_path, 'w') as sql_file:
    sql_file.write(sql_query)

print("SQL文件生成完毕！")
